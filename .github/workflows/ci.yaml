name: CI

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  lint-erb:
    name: Lint (ERB)
    runs-on: "ubuntu-22.04"
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
      - name: Run linters
        run: bin/erblint --format compact --lint-all

  # lint-i18n:
  #   name: Lint (I18n)
  #   runs-on: "ubuntu-22.04"
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3
  #     - name: Set up Ruby
  #       uses: ruby/setup-ruby@v1
  #       with:
  #         bundler-cache: true
  #     - name: Run linters
  #       run: bin/i18n-tasks health

  lint-javascript:
    name: Lint (JavaScript)
    runs-on: "ubuntu-22.04"
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version-file: .node-version
          cache: npm
      - name: Install NPM packages
        run: yarn install --frozen-lockfile
      - name: Run linters
        run: yarn lint

  lint-markdown:
    name: Lint (Markdown)
    runs-on: "ubuntu-22.04"
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
      - name: Run linters
        run: bin/mdl *.md

  lint-ruby:
    name: Lint (Ruby)
    runs-on: "ubuntu-22.04"
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
      - name: Run linters
        run: bin/rubocop -P

  security-brakeman:
    name: Security (Brakeman)
    runs-on: "ubuntu-22.04"
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
      - name: Run security tools
        run: bin/brakeman -q

  security-bundle-audit:
    name: Security (Bundle Audit)
    runs-on: "ubuntu-22.04"
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
      - name: Run security tools
        run: bin/bundle-audit -uq

  security-npm-audit:
    name: Security (NPM Audit)
    runs-on: "ubuntu-22.04"
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version-file: .node-version
          cache: npm
      - name: Install NPM packages
        run: yarn install --frozen-lockfile
      - name: Run linters
        run: yarn audit

  test-rspec:
    name: Test (RSpec)
    runs-on: "ubuntu-22.04"
    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports: ["5432:5432"]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
      - name: Run tests
        uses: paambaati/codeclimate-action@v3.2.0
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
        with:
          coverageCommand: bin/ci-test-rspec

  build-gem:
    name: Build (Ruby Gem)
    runs-on: "ubuntu-22.04"
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
      - name: Run security tools
        run: bin/rails build
